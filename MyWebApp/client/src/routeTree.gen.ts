/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StoreIndexRouteImport } from './routes/store/index'
import { Route as ReportsUserIdRouteImport } from './routes/reports/$userId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StoreIndexRoute = StoreIndexRouteImport.update({
  id: '/store/',
  path: '/store/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsUserIdRoute = ReportsUserIdRouteImport.update({
  id: '/reports/$userId',
  path: '/reports/$userId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/reports/$userId': typeof ReportsUserIdRoute
  '/store': typeof StoreIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/reports/$userId': typeof ReportsUserIdRoute
  '/store': typeof StoreIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/reports/$userId': typeof ReportsUserIdRoute
  '/store/': typeof StoreIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/reports/$userId' | '/store'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/reports/$userId' | '/store'
  id: '__root__' | '/' | '/reports/$userId' | '/store/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ReportsUserIdRoute: typeof ReportsUserIdRoute
  StoreIndexRoute: typeof StoreIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/store/': {
      id: '/store/'
      path: '/store'
      fullPath: '/store'
      preLoaderRoute: typeof StoreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports/$userId': {
      id: '/reports/$userId'
      path: '/reports/$userId'
      fullPath: '/reports/$userId'
      preLoaderRoute: typeof ReportsUserIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ReportsUserIdRoute: ReportsUserIdRoute,
  StoreIndexRoute: StoreIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
